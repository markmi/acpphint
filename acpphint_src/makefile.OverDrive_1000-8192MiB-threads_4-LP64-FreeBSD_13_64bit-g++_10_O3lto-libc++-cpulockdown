#
# acpphint's makefile.OverDrive_1000-8192MiB-threads_4-LP64-FreeBSD_13_64bit-g++_10_O3lto-libc++-cpulockdown
# example (as of requiring c++17 or later)
#
#  Copyright (c) 2015-2020 Mark Millard
#  Copyright (C) 1994 by Iowa State University Research Foundation, Inc.
#
#  Note: Any acpphint*.{h,cpp} code or makefile code
#        that is insufficiently original comes under
#        the Iowa State University Research Foundation,
#        Inc. copyright.
#
#        This does not apply to cpp_*.{h,cpp} or
#        sys_*.{h,cpp} code: that is strictly mine.
#
#  This program is free software; you can redistribute it
#  and/or modify it under the terms of the GNU General
#  version 2 Public License as published by the Free
#  Software Foundation.
#
#  This program is distributed in the hope that it will
#  be useful, but WITHOUT ANY WARRANTY; without even the
#  implied warranty of MERCHANTABILITY or FITNESS FOR A
#  PARTICULAR PURPOSE.  See the GNU General Public
#  License for more details.
#
#  You should have received a copy of the GNU General
#  Public License version 2 along with this program; if
#  not, write to:
#
#  Free Software Foundation, Inc.
#  51 Franklin Street, Fifth Floor,
#  Boston, MA  02110-1301, USA.
#
.POSIX:
.SUFFIXES:

THE_MAKEFILE= makefile.OverDrive_1000-8192MiB-threads_4-LP64-FreeBSD_13_64bit-g++_10_O3lto-libc++-cpulockdown

#
# acpphint's makefile.*'s are very tailored to my use but may be
# used to see how to build the investigative programs and the
# benchmark program and what they in turn require.
#
# Before including makefile.common_part :
# Adjust CXXLIB, CXX, OPT, CPULOCKDOWN_OPT, LDCXX, COMPILER_DESC, 
# LIBRARY_DESC, COMPUTER, RAM, THREADS, CPP_DATA_MODEL, OS,
# and SUFFIX as appropriate.
#
# The major targets are: build gather-info gather-NOPREFER-info
#
# The makefile.*'s are not set up for cross-build use.
#
# The naming used does require (relative to POSIX):
# "allow other characters in target names as extensions"
#

#
# This file presumes FreeBSD port lang/gcc10 is installed.
#

CXXLIB=
CXX=            g++10 -v -std=c++17 -Wpedantic -Wall -Wextra
CXX+=           -Wno-psabi -nostdinc -nostdinc++ -I/usr/include/c++/v1 -I/usr/include
OPT=            -O3 -mcpu=cortex-a57 -mno-outline-atomics -flto
#CPULOCKDOWN_OPT=
CPULOCKDOWN_OPT=        -DWANT_CPU_LOCKDOWN
# Note for FreeBSD: WANT_NUMA_TOO is implicit/automatic; not so for Linux
#CPULOCKDOWN_OPT+=       -DWANT_NUMA_TOO
LDCXX=          -nodefaultlibs -lc++ -lcxxrt -lthr -lm -lc -lgcc_s \
                -Wl,-rpath=/usr/local/lib/gcc10
# For Linux NUMA use:
#LDCXX+=         -lnuma

# Note: g++9 with -O2 or -O3 produced more performant code compared
#       to FreeBSD's system clang 8 with such, and not by trivial
#       amounts for the systems compared. (Same libc++ and such in
#       use.) -O2 vs. -O3 made little difference.
#
# Note: head FreeBSD's libgcc_s was missing at least
#       __floatunditf@GCC_4.2.0 at runtime so, for gcc9,
#       I've used -Wl,-rpath=/usr/local/lib/gcc9 in order
#       to pick up definition(s). So far I've only had
#       such an issue for targeting aarch64 and armv7.

COMPILER_DESC=      g++_10_O3lto
LIBRARY_DESC=       libc++
COMPILER_LIBRARY=   ${COMPILER_DESC}-${LIBRARY_DESC}

COMPUTER=               OverDrive_1000
RAM=                    8192MiB
THREADS=                threads_4
CPP_DATA_MODEL=         LP64
OS=                     FreeBSD_13_r365932M_64bit
#SUFFIX=
SUFFIX=                 -cpulockdown
ACPPHINT_FILENAME_INFO= ${COMPUTER}-${RAM}-${THREADS}-${CPP_DATA_MODEL}-${OS}-${COMPILER_LIBRARY}${SUFFIX}
#
# Note: The "threads_4" is what the hardware has for
# HW threads --or as presented by the likes of HyperV.
# acpphint will also add using_N_threads to file names
# recording benchmark results.
#
# Note: FreeBSD powerpc64 has the same representation
# for long double as for double. This is not true for
# aarch64 or amd64, which use more bytes for long double.

include makefile.common_part

#
#  Support some special NOPREFER-related information gathering:
# 
gather-NOPREFER-info: \
                cpp_clockinfo_main-run \
                acpphint_kernelsurveyors_main-run \
                acpphint_kernelsamplers_main-run \
                acpphint-NOPREFER-run

acpphint-NOPREFER-run:
	cd .. && cpuset -l0,1 ./${@:-NOPREFER-run=}-${ACPPHINT_FILENAME_INFO} "-cpus_0_1.txt"     2
	cd .. && cpuset -l0,2 ./${@:-NOPREFER-run=}-${ACPPHINT_FILENAME_INFO} "-cpus_0_2.txt"     2
	cd .. && cpuset -l0,3 ./${@:-NOPREFER-run=}-${ACPPHINT_FILENAME_INFO} "-cpus_0_3.txt"     2
	cd .. && cpuset -l1,2 ./${@:-NOPREFER-run=}-${ACPPHINT_FILENAME_INFO} "-cpus_1_2.txt"     2
	cd .. && cpuset -l1,3 ./${@:-NOPREFER-run=}-${ACPPHINT_FILENAME_INFO} "-cpus_1_3.txt"     2
	cd .. && cpuset -l2,3 ./${@:-NOPREFER-run=}-${ACPPHINT_FILENAME_INFO} "-cpus_2_3.txt"     2
	cd .. && cpuset -l0-2 ./${@:-NOPREFER-run=}-${ACPPHINT_FILENAME_INFO} "-cpus_0_1_2.txt"   3
	cd .. && cpuset -l0-3 ./${@:-NOPREFER-run=}-${ACPPHINT_FILENAME_INFO} "-cpus_0_1_2_3.txt" 4
