#
# acpphint's makefile.ThreadRipper1950X-131072MiB-threads_32-LP64-Fedora_32-g++_10_O3-libstdc++
# example (as of requiring c++17 or later)
#
#  Copyright (c) 2015-2020 Mark Millard
#  Copyright (C) 1994 by Iowa State University Research Foundation, Inc.
#
#  Note: Any acpphint*.{h,cpp} code or makefile code
#        that is insufficiently original comes under
#        the Iowa State University Research Foundation,
#        Inc. copyright.
#
#        This does not apply to cpp_*.{h,cpp} or
#        sys_*.{h,cpp} code: that is strictly mine.
#
#  This program is free software; you can redistribute it
#  and/or modify it under the terms of the GNU General
#  version 2 Public License as published by the Free
#  Software Foundation.
#
#  This program is distributed in the hope that it will
#  be useful, but WITHOUT ANY WARRANTY; without even the
#  implied warranty of MERCHANTABILITY or FITNESS FOR A
#  PARTICULAR PURPOSE.  See the GNU General Public
#  License for more details.
#
#  You should have received a copy of the GNU General
#  Public License version 2 along with this program; if
#  not, write to:
#
#  Free Software Foundation, Inc.
#  51 Franklin Street, Fifth Floor,
#  Boston, MA  02110-1301, USA.
#
.POSIX:
.SUFFIXES:

THE_MAKEFILE= makefile.ThreadRipper1950X-131072MiB-threads_32-LP64-Fedora_32-g++_10_O3lto-libstdc++

#
# acpphint's makefile.*'s are very tailored to my use but may be
# used to see how to build the investigative programs and the
# benchmark program and what they in turn require.
#
# Before including makefile.common_part :
# Adjust CXXLIB, CXX, OPT, CPULOCKDOWN_OPT, LDCXX, COMPILER_DESC, 
# LIBRARY_DESC, COMPUTER, RAM, THREADS, CPP_DATA_MODEL, OS,
# and SUFFIX as appropriate.
#
# The major targets are: build gather-info gather-NOPREFER-info gather-NUMA-info
#
# The makefile.*'s are not set up for cross-build use.
#
# The naming used does require (relative to POSIX):
# "allow other characters in target names as extensions"
#

#
# This file presumes g++10 is installed as g++.
#

CXXLIB=
CXX=            g++ -v -std=c++17 -Wpedantic -Wall -Wextra
#CXX+=           -Wno-psabi -nostdinc -nostdinc++ -I/usr/include/c++/v1 -I/usr/include
OPT=            -O3 -flto
CPULOCKDOWN_OPT=
#CPULOCKDOWN_OPT=        -DWANT_CPU_LOCKDOWN
# Not used for FreeBSD but used for Linux:
#CPULOCKDOWN_OPT+=       -DSMT_FACTOR=2u
# The below is for other_src_used/sys_cpubinding_lgplv2_1_okay.cpp that I do not
# distribute (but I proved could be implemented on a Linux):
#CPULOCKDOWN_OPT+=       -DLGPLv2_1_OKAY
# Note for FreeBSD: WANT_NUMA_TOO is implicit/automatic; not so for Linux
#CPULOCKDOWN_OPT+=       -DWANT_NUMA_TOO
#LDCXX=          -nodefaultlibs -lc++ -lcxxrt -lthr -lm -lc -lgcc_s
#LDCXX+=         -Wl,-rpath=/usr/local/lib/gcc9
# For Linux NUMA use:
#LDCXX+=         -lnuma

COMPILER_DESC=      g++_10_O3lto
LIBRARY_DESC=       libstdc++
COMPILER_LIBRARY=   ${COMPILER_DESC}-${LIBRARY_DESC}

COMPUTER=               ThreadRipper1950X
RAM=                    131072MiB
THREADS=                threads_32
CPP_DATA_MODEL=         LP64
OS=                     Fedora_32
SUFFIX=
#SUFFIX=                 -cpulockdown
ACPPHINT_FILENAME_INFO= ${COMPUTER}-${RAM}-${THREADS}-${CPP_DATA_MODEL}-${OS}-${COMPILER_LIBRARY}${SUFFIX}
#
# Note: The "threads_32" is what the hardware has for
# HW threads --or as presented by the likes of HyperV.
# acpphint will also add using_N_threads to file names
# recording benchmark results.
#
# Note: FreeBSD powerpc64 has the same representation
# for long double as for double. This is not true for
# aarch64 or amd64, which use more bytes for long double.

include makefile.common_part

#
#  Support some special non-NUMA-related information gathering:
#
gather-NOPREFER-info: \
                cpp_clockinfo_main-run \
                acpphint_kernelsurveyors_main-run \
                acpphint_kernelsamplers_main-run \
                acpphint-NOPREFER-run

# Fedora (linux?) numbering instead of FreeBSD numbering:
acpphint-NOPREFER-run:
	cd .. && numactl -C 0,16,2,18                                  ./${@:-NOPREFER-run=}-${ACPPHINT_FILENAME_INFO} "-cpus_kx16_kx16p2_0_16.txt"    4
	cd .. && numactl -C 0,1,2,3                                    ./${@:-NOPREFER-run=}-${ACPPHINT_FILENAME_INFO} "-cpus_0_3.txt"                 4
	cd .. && numactl -C 0,16,4,20                                  ./${@:-NOPREFER-run=}-${ACPPHINT_FILENAME_INFO} "-cpus_kx16_kx16p4_0_16.txt"    4
	cd .. && numactl -C 0,1,4,5                                    ./${@:-NOPREFER-run=}-${ACPPHINT_FILENAME_INFO} "-cpus_kx4_kx4p1_0_4.txt"       4
	cd .. && numactl -C 0,16,8,24                                  ./${@:-NOPREFER-run=}-${ACPPHINT_FILENAME_INFO} "-cpus_kx8_0_24.txt"            4
	cd .. && numactl -C 0,1,8,9                                    ./${@:-NOPREFER-run=}-${ACPPHINT_FILENAME_INFO} "-cpus_kx8_kx8p1_0_8.txt"       4
	cd .. && numactl -C 0,2,4,6                                    ./${@:-NOPREFER-run=}-${ACPPHINT_FILENAME_INFO} "-cpus_kx2s_0_6.txt"            4
	cd .. && numactl -C 0,2,8,10                                   ./${@:-NOPREFER-run=}-${ACPPHINT_FILENAME_INFO} "-cpus_kx8_kx8p2_0_8.txt"       4
	cd .. && numactl -C 0,4,8,12                                   ./${@:-NOPREFER-run=}-${ACPPHINT_FILENAME_INFO} "-cpus_kx4s_0_12.txt"           4
	cd .. && numactl -C 0,16,2,18,4,20,6,22                        ./${@:-NOPREFER-run=}-${ACPPHINT_FILENAME_INFO} "-cpus_kx2s_0_6_16_22.txt"      8
	cd .. && numactl -C 0,1,2,3,4,5,6,7                            ./${@:-NOPREFER-run=}-${ACPPHINT_FILENAME_INFO} "-cpus_0_7.txt"                 8
	cd .. && numactl -C 0,16,2,18,8,24,10,26                       ./${@:-NOPREFER-run=}-${ACPPHINT_FILENAME_INFO} "-cpus_kx8_kx8p2_0_8_16_24.txt" 8
	cd .. && numactl -C 0,1,2,3,8,9,10,11                          ./${@:-NOPREFER-run=}-${ACPPHINT_FILENAME_INFO} "-cpus_0_3_8_11.txt"            8
	cd .. && numactl -C 0,2,4,6,8,10,12,14                         ./${@:-NOPREFER-run=}-${ACPPHINT_FILENAME_INFO} "-cpus_kx2s_0_14.txt"           8
	cd .. && numactl -C 0,16,2,18,4,20,6,22,8,24,10,26,12,28,14,30 ./${@:-NOPREFER-run=}-${ACPPHINT_FILENAME_INFO} "-cpus_kx2s_0_30.txt"           16
	cd .. && numactl -C 0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15      ./${@:-NOPREFER-run=}-${ACPPHINT_FILENAME_INFO} "-cpus_0_15.txt"                16

#
#  Support some NUMA-related information gathering:
#
gather-NUMA-info: \
                cpp_clockinfo_main-run \
                acpphint_kernelsurveyors_main-run \
                acpphint_kernelsamplers_main-run \
                acpphint-NUMA-run
                
acpphint-NUMA-run:
	cd .. && numactl --preferred 1                 ./${@:-NUMA-run=}-${ACPPHINT_FILENAME_INFO} "-memnode_1_cpus_any.txt"    1 32
	cd .. && numactl --preferred 1 --cpunodebind 0 ./${@:-NUMA-run=}-${ACPPHINT_FILENAME_INFO} "-memnode_1_cpus_node_0.txt" 1 16
	cd .. && numactl --preferred 1 --cpunodebind 1 ./${@:-NUMA-run=}-${ACPPHINT_FILENAME_INFO} "-memnode_1_cpus_node_1.txt" 1 16
	cd .. && numactl --preferred 1 -C 0-15         ./${@:-NUMA-run=}-${ACPPHINT_FILENAME_INFO} "-memnode_1_cpus_0_15.txt"   1 16
	cd .. && numactl --interleave=all              ./${@:-NUMA-run=}-${ACPPHINT_FILENAME_INFO} "-memnode_interleave.txt"    1 32
	cd .. && numactl --localalloc                  ./${@:-NUMA-run=}-${ACPPHINT_FILENAME_INFO} "-memnode_localalloc.txt"    1 32
